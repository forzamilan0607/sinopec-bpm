<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dstz.demo.core.dao.MaterialManagerDao">
    <resultMap id="MaterialProcess" type="com.dstz.demo.core.model.MaterialProcess">
        <result property="id" column="id"/>
        <result property="enquiryName" column="enquiry_name"/>
        <result property="purchaseAply" column="purchase_aply"/>
        <result property="materialNo" column="material_no"/>
        <result property="materialDesc" column="material_desc"/>
        <result property="unit" column="unit"/>
        <result property="number" column="number"/>
        <result property="plant" column="plant"/>
        <result property="reservedNumber" column="reserved_number"/>
        <result property="remark" column="remark"/>
        <result property="createTime" column="gmt_create"/>
        <result property="createBy" column="user_create"/>
        <result property="processId" column="process_id"/>
        <result property="updateTime" column="update_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="reqPlanNo" column="req_plan_no"/>
        <result property="workshopPlannerRemark" column="workshop_planner_remark"/>
        <result property="supplyPlanPostRemark" column="supply_plan_post_remark"/>
        <result property="purchaseOrderNo" column="purchase_order_no"/>
        <result property="erpOrderNo" column="erp_order_no"/>
        <result property="contractNo" column="contract_no"/>
        <result property="stockVoucherNo" column="stock_voucher_no"/>
        <result property="inStockDate" column="in_stock_date"/>
        <result property="outStockDate" column="out_stock_date"/>
    </resultMap>
    <resultMap id="BpmInstance" type="com.dstz.bpm.core.model.BpmInstance">
        <id property="id" column="id_" jdbcType="VARCHAR"/>
        <result property="subject" column="subject_" jdbcType="VARCHAR"/>
        <result property="defId" column="def_id_" jdbcType="VARCHAR"/>
        <result property="actDefId" column="act_def_id_" jdbcType="VARCHAR"/>
        <result property="defKey" column="def_key_" jdbcType="VARCHAR"/>
        <result property="defName" column="def_name_" jdbcType="VARCHAR"/>
        <result property="bizKey" column="biz_key_" jdbcType="VARCHAR"/>
        <result property="status" column="status_" jdbcType="VARCHAR"/>
        <result property="endTime" column="end_time_" jdbcType="TIMESTAMP"/>
        <result property="duration" column="duration_" jdbcType="NUMERIC"/>
        <result property="typeId" column="type_id_" jdbcType="VARCHAR"/>
        <result property="actInstId" column="act_inst_id_" jdbcType="VARCHAR"/>
        <result property="createBy" column="create_by_" jdbcType="VARCHAR"/>
        <result property="creator" column="creator_" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time_" jdbcType="TIMESTAMP"/>
        <result property="createOrgId" column="create_org_id_" jdbcType="VARCHAR"/>
        <result property="updateBy" column="update_by_" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time_" jdbcType="TIMESTAMP"/>
        <result property="isFormmal" column="is_formmal_" jdbcType="VARCHAR"/>
        <result property="parentInstId" column="parent_inst_id_" jdbcType="VARCHAR"/>
        <result property="isForbidden" column="is_forbidden_" jdbcType="NUMERIC"/>
        <result property="dataMode" column="data_mode_" jdbcType="VARCHAR"/>
        <result property="supportMobile" column="support_mobile_" jdbcType="NUMERIC"/>
        <result property="superNodeId" column="super_node_id_" jdbcType="VARCHAR"/>
    </resultMap>

    <insert id="create" parameterType="com.dstz.demo.core.model.MaterialProcess">
        insert into t_process_material
		(
			`id`,
			`enquiry_name`,
			`purchase_aply`,
			`material_no`,
			`material_desc`,
			`unit`,
			`number`,
			`plant`,
			`reserved_number`,
			`remark`,
			`gmt_create`,
			`user_create`,
			`process_id`,
			`req_plan_no`,
			`workshop_planner_remark`,
			`supply_plan_post_remark`,
			`purchase_order_no`,
			`erp_order_no`,
			`contract_no`,
			`stock_voucher_no`,
			`in_stock_date`,
			`out_stock_date`
		)
		values
		(
			#{id},
			#{enquiryName},
			#{purchaseAply},
			#{materialNo},
			#{materialDesc},
			#{unit},
			#{number},
			#{plant},
			#{reservedNumber},
			#{remark},
			now(),
			#{createBy},
			#{processId},
			#{reqPlanNo},
			#{workshopPlannerRemark},
			#{supplyPlanPostRemark},
			#{purchaseOrderNo},
			#{erpOrderNo},
			#{contractNo},
			#{stockVoucherNo},
			#{inStockDate},
			#{outStockDate}
		)
	</insert>
    <update id="update" parameterType="com.dstz.demo.core.model.MaterialProcess">
        update t_process_material SET
        `enquiry_name` = #{enquiryName},
        `purchase_aply` = #{purchaseAply},
        `material_no` = #{materialNo},
        `material_desc` = #{materialDesc},
        `unit` = #{unit},
        `number` = #{number},
        `plant` = #{plant},
        `reserved_number` = #{reservedNumber},
        `remark` = #{remark},
        `process_id` = #{processId},
        `update_time` = now(),
        `update_by` = #{updateBy},
        `req_plan_no` = #{reqPlanNo},
        `workshop_planner_remark` = #{workshopPlannerRemark},
        `supply_plan_post_remark` = #{supplyPlanPostRemark},
        `purchase_order_no` = #{purchaseOrderNo},
        `erp_order_no` = #{erpOrderNo},
        `contract_no` = #{contractNo},
        `stock_voucher_no` = #{stockVoucherNo},
        `in_stock_date` = #{inStockDate},
        `out_stock_date` = #{outStockDate}
        where id = #{id}
	</update>

    <select id="get"   parameterType="java.lang.String" resultMap="MaterialProcess">
		SELECT * FROM t_process_material
		WHERE
		id=#{id}
	</select>
    <resultMap id="materialMap" type="java.util.Map">
        <result property="isInstance" column="isInstance"/>
        <result property="id" column="id"/>
    </resultMap>

    <select id="getInstance"  parameterType="com.dstz.demo.core.model.MaterialProcess" resultMap="materialMap">
		SELECT
            material.id as id,
            purchase_aply AS purchaseAply,
            IF(IFNULL( link.id_, 0 )= 0,'false','true') AS isInstance
		FROM t_process_material AS material
        LEFT JOIN bpm_bus_link AS link
        ON link.biz_id_ = material.id
		WHERE 1=1
		<if test="materialNo != null and materialNo !='' ">
		  AND material.material_no = #{materialNo}
        </if>
		<if test="purchaseAply != null and purchaseAply !='' ">
          AND purchase_aply=#{purchaseAply}
        </if>
		limit 1
	</select>

    <select id="query" parameterType="java.util.Map" resultType="com.dstz.demo.core.model.MaterialProcess">
        SELECT t.* FROM (
        SELECT
        t2.instId,
        t.id,
        t.req_plan_no AS reqPlanNo,
        t.material_no AS materialNo,
        t.material_desc AS materialDesc,
        t.unit AS unit,
        t.number AS number,
        t.plant AS plant,
        t.workshop_planner_remark AS workshopPlannerRemark,
        t.reserved_number AS reservedNumber,
        t.purchase_aply AS purchaseAply,
        t.enquiry_name AS enquiryName,
        t.supply_plan_post_remark AS supplyPlanPostRemark,
        t.purchase_order_no AS purchaseOrderNo,
        t.erp_order_no AS erpOrderNo,
        t.contract_no AS contractNo,
        t.remark AS remark,
        t.stock_voucher_no AS stockVoucherNo,
        t.in_stock_date AS inStockDate,
        t.out_stock_date AS outStockDate,
        t.gmt_create AS createTime,
        t.user_create AS createBy,
        t.update_time AS updateTime,
        t.update_by AS updateBy
        FROM t_process_material t
        left join (select inst.id_ AS instId,b.biz_id_ FROM bpm_bus_link b,bpm_instance inst where inst.id_ =
        b.inst_id_) t2 ON t2.biz_id_ = t.id
        <where>
                <if test="whereSql!=null">
                    ${whereSql}
                </if>
                <if test="hisUpdateUser != null ">
                    or EXISTS (SELECT 1 FROM t_purchase_plan_his_rec where material_process_id = t.id AND update_user = #{hisUpdateUser} )
                </if>
                <if test="ids != null ">
                    or t.id in
                    <foreach item="id" collection="ids" separator="," open="(" close=")" index="">
                      #{id, jdbcType=VARCHAR}
                    </foreach>
                </if>
            </where>
            <if test="orderBySql!=null">
                ORDER BY ${orderBySql}
            </if>
            <if test="orderBySql==null">
                ORDER BY t.id desc
            </if>
        ) t WHERE 1=1
          <if test="conditionParam != null">
              ${conditionParam}
          </if>
    </select>

    <select id="instanceQuery" parameterType="java.util.Map" resultMap="BpmInstance">
        SELECT ins.* FROM bpm_instance AS ins
        INNER JOIN bpm_bus_link AS link
        ON link.inst_id_ = ins.id_
        INNER JOIN  t_process_material AS mater
        ON link.biz_id_ = mater.id
        <where>
            <if test="whereSql!=null">
                ${whereSql}
            </if>
        </where>
        <if test="orderBySql!=null">
            ORDER BY ${orderBySql}
        </if>
        <if test="orderBySql==null">
            ORDER BY id_ DESC
        </if>
    </select>

    <delete id="remove" parameterType="java.lang.String">
		DELETE FROM t_process_material
		WHERE
		(process_id IS NULL OR process_id = '')
		AND
		id=#{id}
	</delete>

    <select id="queryMaterialProcIdsByCurrentUser" resultType="java.lang.String" parameterType="java.lang.String">
        SELECT DISTINCT bl.biz_id_
        FROM bpm_task task,bpm_definition d,bpm_task_identitylink link,bpm_bus_link bl
        WHERE task.def_id_ = d.id_ and bl.inst_id_ = task.inst_id_
        AND task.id_ = link.task_id_
        AND EXISTS (select id from t_process_material where id = bl.biz_id_)
        AND (
            task.assignee_id_ = '0'
            AND link.permission_code_ in
            (
                SELECT CONCAT(g.id_, '-org') AS groupName FROM org_group g
                left join org_relation rel on group_id_ = g.id_
                WHERE  user_id_ = #{userId}
                and rel.type_ in ('groupUser','groupUserRole') and rel.status_ = 1
                union
                SELECT concat(role.id_, '-role') AS groupName from org_role role
                left join org_relation relation on role.id_ = relation.role_id_
                where enabled_ = 1 and relation.status_ =1
                and relation.user_id_ = #{userId}
                UNION
                SELECT concat(relation.group_id_, '-', relation.role_id_, '-post') AS groupName
                FROM org_relation relation
                left join org_user tuser on relation.user_id_ = tuser.id_
                left join org_group tgroup on relation.group_id_ = tgroup.id_
                left join org_role role on relation.role_id_ = role.id_
                WHERE relation.user_id_ = #{userId} and relation.status_ = 1
                and relation.type_ = 'groupUserRole'
                UNION
                select concat(${userId}, '-user') AS groupName
            )
        )
        or task.assignee_id_ = #{userId}
    </select>
</mapper>